name: Analyze Logs with AI Agent

on:
  workflow_dispatch:  # Allows manual triggering of the workflow
    inputs:
      sample_github_workflows_branch:
        description: "Branch of sample_github_workflows"
        required: false
        default: "main"
        type: string
      analyze_mode:
        description: 'Choose whether to analyze the most recent workflow run or a specific workflow run'
        required: true
        default: 'most_recent'
        type: choice
        options:
          - most_recent
          - specific
      workflow_run_id:
        description: 'The ID of the specific workflow run to analyze (required if analyze_mode is specific)'
        required: false
        type: string

jobs:
  analyze_logs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.sample_github_workflows_branch }}

    - name: Install GitHub CLI
      run: |
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh -y

    - name: Install jq
      run: |
        sudo apt-get install jq -y

    - name: Fetch logs from previous workflow run
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        analyze_mode="${{ github.event.inputs.analyze_mode }}"

        echo "Fetching logs from the previous run..."
        if [ "$analyze_mode" = "recent" ]; then
          # Fetch the ID of the most recent workflow run for the "python-tests" workflow
          run_id=$(gh api "repos/${{ github.repository }}/actions/runs?workflow_id=python-tests&status=completed&per_page=1" \
            | jq -r '.workflow_runs[0].id')
        else
          # Use the specified workflow run ID
          run_id="${{ github.event.inputs.workflow_run_id }}"
          if [ -z "$run_id" ]; then
            echo "Error: workflow_run_id is required when analyze_mode is 'specific'"
            exit 1
          fi
        fi
        
        echo "Run ID: $run_id"
        
        # Fetch the logs URL from GitHub API
        logs_url="https://api.github.com/repos/${{ github.repository }}/actions/runs/${run_id}/logs"
        echo "Logs URL: $logs_url"
        
        # Download the logs as a zip file, following redirects
        http_status=$(curl -L -s -o logs.zip -w "%{http_code}" -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" $logs_url)
        
        if [ "$http_status" -ne 200 ]; then
          echo "Failed to fetch logs. HTTP status: $http_status"
          cat logs.zip
          exit 1
        fi
        
        # Unzip the logs file
        unzip logs.zip -d logs || { echo "Failed to unzip logs"; exit 1; }
        
        # Combine all the logs into one file
        cat logs/**/*.txt > logs/combined_logs.txt

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'  # Confirm required Python version

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Process logs and send to AI agent
      env:
        LITELLM_API_KEY: ${{ secrets.LITELLM_API_KEY }}
      run: |
        echo "Sending logs to AI agent for analysis..."
        cd "${GITHUB_WORKSPACE}/tools"
        python dylan_ai_agent.py "${GITHUB_WORKSPACE}/logs/combined_logs.txt" > ai-analysis-result.txt
        echo "AI analysis completed. Results:"
        cat ai-analysis-result.txt