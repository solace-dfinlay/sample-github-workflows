name: Python Tests

on:
  workflow_dispatch:
    inputs:
      sample_github_workflows_branch:
        description: "Branch of sample_github_workflows"
        required: false
        default: "main"
        type: string
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.sample_github_workflows_branch }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'  # Confirm required Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

    - name: Run tests
      run: |
        set -e
        python -m unittest discover

    # - name: Analyze logs with AI Agent
    #   if: failure()
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   run: |
    #     echo "Fetching logs from GitHub Actions API..."
    #     run_id=${{ github.run_id }}
    #     logs_url="https://api.github.com/repos/${{ github.repository }}/actions/runs/${run_id}/logs"
    #     echo "Logs URL: $logs_url"
    #     sleep 10  # Adding delay to ensure logs are available
    #     http_status=$(curl -s -o logs.zip -w "%{http_code}" -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" $logs_url)
    #     if [ "$http_status" -ne 200 ]; then
    #       echo "Failed to fetch logs. HTTP status: $http_status"
    #       cat logs.zip
    #       exit 1
    #     fi
    #     unzip logs.zip -d logs || { echo "Failed to unzip logs"; exit 1; }
    #     cat logs/*.txt > combined_logs.txt
    #     python tools/dylan_ai_agent.py < combined_logs.txt > ai-analysis-result.txt
    #     cat ai-analysis-result.txt
